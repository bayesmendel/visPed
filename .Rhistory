devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
ks_ped
library(visPed)
library(PanelPRO)
visPed(small.fam)
visPed(small.fam)
x$affected
substring(colnames(x$affected[, grepl("isAff", names(x$affected))]), 6)
x$affected
names(x$affected)
str(x$affected)
dimnames(x$affected)
dimnames(x$affected)[[2]]
substring(dimnames(x$affected)[[2]], 6)
library(PanelPRO); library(visPed)
visPed(small.fam)
substring(dimnames(x$affected)[[2]], 6)
library(visPed)
library(PanelPRO)
visPed(small.fam)
devtools::document()
library(visPed)
devtools::document()
fam25
load("C:/Users/leega/Desktop/fam10.rda")
library(visPed)
visPed(fam10, title = "fam10")
visPed(fam10, title = "fam10")
library(PanelPRO)
library(visPed)
visPed(small.fam)
library(PanelPRO)
source('~/Repositories/visPed/R/visPed.R')
visPed(fam25)
annot
visPed(fam25)
annot
source('~/Repositories/visPed/R/visPed.R')
visPed(fam25)
fam_vec
annotation_string
annotations
annot.features
features_cols
feature_annotations
features_cols
annotations
source('~/Repositories/visPed/R/visPed.R')
visPed(fam25)
source('~/Repositories/visPed/R/visPed.R')
visPed(fam25)
features_annotations
visPed(fam25)
feature_cols
source('~/Repositories/visPed/R/visPed.R')
visPed(fam25)
feature_cols
features_cols
features_annotations
feature_annotations
ped
source('~/Repositories/visPed/R/visPed.R')
source('~/Repositories/visPed/R/visPed.R')
visPed(fam25)
source('~/Repositories/visPed/R/visPed.R')
visPed(fam25)
source('~/Repositories/visPed/R/visPed.R')
visPed(fam25)
annotations
source('~/Repositories/visPed/R/visPed.R')
visPed(fam25)
annotations
i
i
annotations[i]
unlist(strsplit(annotations[4], split = "\n"))[1]
substring(annotations[i], 2)
source('~/Repositories/visPed/R/visPed.R')
source('~/Repositories/visPed/R/visPed.R')
visPed(fam25)
source('~/Repositories/visPed/R/visPed.R')
visPed(fam25)
source('~/Repositories/visPed/R/visPed.R')
visPed(fam25)
source('~/Repositories/visPed/R/visPed.R')
visPed(fam25)
annotations[i]
unlist(strsplit(annotations[i], split == "\n"))
strsplit(annotations[i], split == "\n"))
strsplit(annotations[i], split == "\n")
strsplit(annotations[i], split = "\n")
visPed(fam25)
strsplit(annotations[i], split = "\n"))[1]
visPed(fam25)
strsplit(annotations[i], split = "\n")
source('~/Repositories/visPed/R/visPed.R')
visPed(fam25)
annotations
visPed(fam25)
visPed(fam25)
strsplit(annotations[i], split = "\n")[1]
strsplit(annotations[i], split = "\n")
strsplit(annotations[i], split = "\n")[[1]]
strsplit(annotations[i], split = "\n")[[1]][1] == ""
source('~/Repositories/visPed/R/visPed.R')
visPed(fam25)
source('~/Repositories/visPed/R/visPed.R')
visPed(fam25)
source('~/Repositories/visPed/R/visPed.R')
visPed(fam25)
strsplit(annotations[i], split = "\n")
strsplit(annotations[i], split = "\n")[[1]]
strsplit(annotations[i], split = "\n")[[1]][1]
annotations
strsplit(annotations[i], split = "\n")[[1]] == character(0)
isTRUE(strsplit(annotations[i], split = "\n")[[1]] == character(0))
isTRUE(strsplit(annotations[i], split = "\n")[[1]] == NA
strsplit(annotations[i], split = "\n")[[1]]
source('~/Repositories/visPed/R/visPed.R')
visPed(fam25)
annotations
visPed(fam25)
annotations
annotations
annotations
i
strsplit(annotations[i], split = "\n")[[1]]
substr(annotations[i], 1, 2)
substr("\nasasd", 1, 2)
substr("\nasasd", 1, 1)
substr("\nasasd", 1, 1) == "\n"
source('~/Repositories/visPed/R/visPed.R')
visPed(fam25)
i
annotations
annotations
source('~/Repositories/visPed/R/visPed.R')
visPed(fam25)
visPed(fam25)
visPed(fam19)
load(file = "fam19.rdatra")
load(file = "fam19.rdata")
visPed(fam19)
visPed(fam19, title = "Example Pedigree")
visPed(fam10, title = "Example Pedigree")
visPed(fam10, title = "Example Pedigree")
visPed(fam10, title = "Example Pedigree")
visPed(fam19, title = "Example Pedigree")
visPed(fam19, title = "Example Pedigree")
visPed(fam10, title = "Example Pedigree")
visPed(fam19, title = "Example Pedigree")
visPed(fam10)
visPed(fam25)
visPed(fam50)
visPed(fam50)
visPed(fam50)
visPed(fam50)
source('~/Repositories/visPed/R/visPed.R')
visPed(fam50)
annotations
anotations
annotations
fix_ns <- function(annotation) {
fixed <- FALSE
while (!fixed) {
if (annotation == "\n" || all(unlist(strsplit(annotation, split = "\n")) == "")) {
# If the entire string is \n or \n repeated, get rid of it
annotation <- ""
fixed <- TRUE
} else if (unlist(strsplit(annotation, split = "\n"))[1] == "") {
# If there is a \n at the start, get rid of it
annotation <- fix_ns(substring(annotation, 2))
}
if (annotation != "" && annotation != "\n") {
# Put a \n at the end if there is actually a notation
# But don't if there is already one
annotation <- fix_ns(cut_n(paste0(annotation, "\n")))
}
# There might still be "\n" at the start... remove them
# We might need to do this recursively...
if (!identical(strsplit(annotation, split = "\n")[[1]], character(0)) &
substr(annotation, 1, 1) == "\n") {
annotation <- fix_ns(substring(annotation, 2))
}
}
}
fix_ns("\n\nBC: NA\n\nOC: 45\n\n\n)
fix_ns("\n\nBC: NA\n\nOC: 45\n\n\n")
cut_n <- function(string) {
if (regmatches(string, regexpr(".{2}$", string)) == "\n\n") {
output <- substr(string, 1, nchar(string)-1)
return(cut_n(output))
} else {
return(string)
}
}
fix_ns <- function(annotation) {
browser()
fixed <- FALSE
while (!fixed) {
if (annotation == "\n" || all(unlist(strsplit(annotation, split = "\n")) == "")) {
# If the entire string is \n or \n repeated, get rid of it
annotation <- ""
fixed <- TRUE
} else if (unlist(strsplit(annotation, split = "\n"))[1] == "") {
# If there is a \n at the start, get rid of it
annotation <- fix_ns(substring(annotation, 2))
}
if (annotation != "" && annotation != "\n") {
# Put a \n at the end if there is actually a notation
# But don't if there is already one
annotation <- fix_ns(cut_n(paste0(annotation, "\n")))
}
# There might still be "\n" at the start... remove them
# We might need to do this recursively...
if (!identical(strsplit(annotation, split = "\n")[[1]], character(0)) &
substr(annotation, 1, 1) == "\n") {
annotation <- fix_ns(substring(annotation, 2))
}
}
}
fix_ns("\n\nBC: NA\n\nOC: 45\n\n")
annotation
annotation
annotation
annotation
annotation
fix_ns <- function(annotation) {
browser()
fixed <- FALSE
while (!fixed) {
if (annotation == "\n" || all(unlist(strsplit(annotation, split = "\n")) == "")) {
# If the entire string is \n or \n repeated, get rid of it
annotation <- ""
fixed <- TRUE
} else if (unlist(strsplit(annotation, split = "\n"))[1] == "") {
# If there is a \n at the start, get rid of it
annotation <- fix_ns(substring(annotation, 2))
}
if (annotation != "" && annotation != "\n") {
# Put a \n at the end if there is actually a notation
# But don't if there is already one
annotation <- fix_ns(cut_n(paste0(annotation, "\n")))
fixed <- TRUE
}
# There might still be "\n" at the start... remove them
# We might need to do this recursively...
if (!identical(strsplit(annotation, split = "\n")[[1]], character(0)) &
substr(annotation, 1, 1) == "\n") {
annotation <- fix_ns(substring(annotation, 2))
}
}
}
fix_ns("\n\nBC: NA\n\nOC: 45\n\n")
fix_ns <- function(annotation) {
browser()
fixed <- FALSE
while (!fixed) {
if (annotation == "\n" || all(unlist(strsplit(annotation, split = "\n")) == "")) {
# If the entire string is \n or \n repeated, get rid of it
annotation <- ""
fixed <- TRUE
} else if (unlist(strsplit(annotation, split = "\n"))[1] == "") {
# If there is a \n at the start, get rid of it
annotation <- fix_ns(substring(annotation, 2))
}
if (annotation != "" && annotation != "\n") {
# Put a \n at the end if there is actually a notation
# But don't if there is already one
fixed <- TRUE
annotation <- fix_ns(cut_n(paste0(annotation, "\n")))
}
# There might still be "\n" at the start... remove them
# We might need to do this recursively...
if (!identical(strsplit(annotation, split = "\n")[[1]], character(0)) &
substr(annotation, 1, 1) == "\n") {
annotation <- fix_ns(substring(annotation, 2))
}
}
}
fix_ns("\n\nBC: NA\n\nOC: 45\n\n")
fix_ns <- function(annotation) {
browser()
while (!fixed) {
fixed <- FALSE
if (annotation == "\n" || all(unlist(strsplit(annotation, split = "\n")) == "")) {
# If the entire string is \n or \n repeated, get rid of it
annotation <- ""
fixed <- TRUE
} else if (unlist(strsplit(annotation, split = "\n"))[1] == "") {
# If there is a \n at the start, get rid of it
annotation <- fix_ns(substring(annotation, 2))
}
if (annotation != "" && annotation != "\n") {
# Put a \n at the end if there is actually a notation
# But don't if there is already one
fixed <- TRUE
annotation <- fix_ns(cut_n(paste0(annotation, "\n")))
}
# There might still be "\n" at the start... remove them
# We might need to do this recursively...
if (!identical(strsplit(annotation, split = "\n")[[1]], character(0)) &
substr(annotation, 1, 1) == "\n") {
annotation <- fix_ns(substring(annotation, 2))
}
}
}
fix_ns("\n\nBC: NA\n\nOC: 45\n\n")
fixed <- FALSE
fix_ns <- function(annotation) {
browser()
while (!fixed) {
if (annotation == "\n" || all(unlist(strsplit(annotation, split = "\n")) == "")) {
# If the entire string is \n or \n repeated, get rid of it
annotation <- ""
fixed <- TRUE
} else if (unlist(strsplit(annotation, split = "\n"))[1] == "") {
# If there is a \n at the start, get rid of it
annotation <- fix_ns(substring(annotation, 2))
}
if (annotation != "" && annotation != "\n") {
# Put a \n at the end if there is actually a notation
# But don't if there is already one
fixed <- TRUE
annotation <- fix_ns(cut_n(paste0(annotation, "\n")))
}
# There might still be "\n" at the start... remove them
# We might need to do this recursively...
if (!identical(strsplit(annotation, split = "\n")[[1]], character(0)) &
substr(annotation, 1, 1) == "\n") {
annotation <- fix_ns(substring(annotation, 2))
}
}
}
fix_ns("\n\nBC: NA\n\nOC: 45\n\n")
source('~/Repositories/visPed/R/visPed.R')
visPed(fam50)
annotations
strsplit(annotations[40], split = "\n")
strsplit(annotations[26], split = "\n")
annotations
source('~/Repositories/visPed/R/visPed.R')
visPed(fam50)
annotations
visPed(fam50)
visPed(fam50)
annotations
strsplit("BRA:65\n\nENDO:45\n", split = "\n")
strsplit("BRA:65\nENDO:45\n", split = "\n")
strsplit(annotations, split = "\n")
strsplit(annotations[26], split = "\n")
strsplit(annotations[26], split = "\n")[[1]]
which(strsplit(annotations[26], split = "\n")[[1]] == "")
which(strsplit(annotations[25], split = "\n")[[1]] == "")
double_ns <- strsplit(annotations[26], split = "\n")[[1]]
double_ns
double_ns <- strsplit(annotations[i], split = "\n")[[1]] == ""
double_ns
which(double_ns)
annotations[i]
double_ns <- strsplit(annotations[26], split = "\n")[[1]] == ""
double_ns
which(c(FALSE, FALSE))
which(c(TRUE,FALSE))
visPed(fam50)
source('~/Repositories/visPed/R/visPed.R')
source('~/Repositories/visPed/R/visPed.R')
visPed(fam50)
annotations
visPed(fam50)
annotations
source('~/Repositories/visPed/R/visPed.R')
source('~/Repositories/visPed/R/visPed.R')
visPed(fam50)
annotations
annotations
i
annotations
source('~/Repositories/visPed/R/visPed.R')
visPed(fam50)
annotations
annotations[i]
annotations[i]
double_ns
annotations[i]
strsplit(annotations[i], split = "\n")[[1]]
strsplit(annotations[i], split = "\n")[[1]][!which(double_ns)]
double_ns
!which(double_ns)
double_ns
!double_ns
source('~/Repositories/visPed/R/visPed.R')
visPed(fam50)
annotations[i]
source('~/Repositories/visPed/R/visPed.R')
visPed(fam50)
which(double_ns)
annotations[i]
strsplit(annotations[i], split = "\n")[[1]][!double_ns]
paste0(strsplit(annotations[i], split = "\n")[[1]][!double_ns],
"\n"
)
paste("hi","bye")
paste(c("hi","bye", sep = "")
)
paste(strsplit(annotations[i], split = "\n")[[1]][!double_ns], sep = "\n")
paste(strsplit(annotations[i], split = "\n")[[1]][!double_ns], sep = "\n", collapse = '')
paste(strsplit(annotations[i], split = "\n")[[1]][!double_ns], collapse = '\n')
paste(paste(strsplit(annotations[i], split = "\n")[[1]][!double_ns], collapse = '\n'), "\n", collapse = "")
paste(paste(strsplit(annotations[i], split = "\n")[[1]][!double_ns], collapse = "\n"), "\n", collapse = "")
styler:::style_active_file()
source('~/Repositories/visPed/R/visPed.R')
visPed(fam50)
annotations
visPed(fam50)
visPed(fam10)
source('~/Repositories/visPed/R/visPed.R')
visPed(fam10)
visPed(fam25)
visPed(fam50)
visPed(fam19)
visPed(fam50)
visPed(fam50)
visPed(fam50)
source('~/Repositories/PedUtils/R/plot.PlotPed.R')
source('~/Repositories/PedUtils/R/plot.plotBackend.R')
library(PanelPRO)
visPed(fam10)
source('~/Repositories/visPed/R/visPed.R')
visPed(fam10)
visPed(fam10)
load('fam19.rdata')
visPed(fam19)
visPed(fam25)
visPed(fam50)
plotPed(fam10)
plotPed(fam19)
plotPed(fam25)
plotPed(fam50)
visPed(fam50)
